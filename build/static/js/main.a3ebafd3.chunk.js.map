{"version":3,"sources":["logo.svg","SortingAlgorithms/mergeSort.js","SortingAlgorithms/quickSort.js","SortingAlgorithms/heapSort.js","SortingAlgorithms/combSort.js","SortingVisualizer/SortingVisualizer.jsx","SortingAlgorithms/bubbleSort.js","SortingAlgorithms/selectionSort.js","SortingAlgorithms/insertionSort.js","SortingAlgorithms/cocktailSort.js","SortingAlgorithms/shellSort.js","App.js","reportWebVitals.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getQuickSortAnimations","quickSort","pivotIdx","random","leftPointer","swap","partition","firstIdx","secondIdx","temp","getHeapSortAnimations","heapDown","heapSort","arr","index","largest","left","right","getCombSortAnimations","gap","combSortHelper","combSort","console","log","ANIMATION_SPEED_MS_SBC","ANIMATION_SPEED_MS_ISC","PRIMARY_COLOR","SECONDARY_COLOR","SortingVisualizer","props","state","this","restArray","min","max","setState","select","newBtn","document","getElementById","newBtn1","newBtn2","newBtn3","newBtn4","newBtn5","newBtn6","newBtn7","newBtn8","newBtn9","disabled","toggleButtons","time","desc","barOneIdx","barTwoIdx","ColorChange","arrayBars","getElementsByClassName","color","barOneStyle","style","barTwoStyle","setTimeout","background","barIndex","newHeight","barStyle","height","getBubbleSortAnimations","getSelectionSortAnimations","keyIndex","getInsertionSortAnimations","a","swapped","start","end","getCocktailSortAnimations","color1","barpivot","ANIMATION_SPEED_MS_MHQ","backgroundColor","n","getShellSortAnimations","barThreeIdx","barThreeStyle","webs","className","id","onClick","showcatweb","mergesort","selectionSort","bubblesort","insertionsort","shellsort","cocktailsort","quicksort","map","value","idx","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a3ebafd3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return [animations];\r\n  }\r\n\r\n  function mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n  }\r\n  \r\n  function doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n      animations.push([\"compare1\",i, j]);\r\n      animations.push([\"compare2\",i, j]);\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        animations.push([\"swap\",k, auxiliaryArray[i]]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        animations.push([\"swap\",k, auxiliaryArray[j]]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n      animations.push([\"compare1\",i, i]);\r\n      animations.push([\"compare2\",i, i]);\r\n      animations.push([\"swap\",k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n      animations.push([\"compare1\",j, j]);\r\n      animations.push([\"compare2\",j, j]);\r\n      animations.push([\"swap\",k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n","export function getQuickSortAnimations(array) {\r\n    let animations = [];\r\n    let auxiliaryArray = array.slice();\r\n    quickSort(auxiliaryArray, 0, auxiliaryArray.length - 1, animations);\r\n\r\n    array = auxiliaryArray;\r\n    return [animations, array];\r\n}\r\nfunction quickSort(auxiliaryArray, startIdx, endIdx, animations) {\r\n    if (startIdx < endIdx) {\r\n        let pivotIdx = partition(auxiliaryArray, startIdx, endIdx, animations);\r\n        quickSort(auxiliaryArray, startIdx, pivotIdx - 1, animations);\r\n        quickSort(auxiliaryArray, pivotIdx + 1, endIdx, animations);\r\n    }\r\n}\r\nfunction partition(auxiliaryArray, startIdx, endIdx, animations) {\r\n    let pivotIdx = Math.floor(Math.random() * (endIdx - startIdx + 1) + startIdx);\r\n    let leftPointer = startIdx;\r\n    animations.push([\"pivot1\", pivotIdx, endIdx]);\r\n    animations.push([\"swap\", pivotIdx, auxiliaryArray[endIdx]]);\r\n    animations.push([\"swap\", endIdx, auxiliaryArray[pivotIdx]]);\r\n    swap(auxiliaryArray, pivotIdx, endIdx);\r\n\r\n    for (let i = startIdx; i < endIdx; i++) {\r\n        animations.push([\"compare1\", i, endIdx]);\r\n        animations.push([\"compare2\", i, endIdx]);\r\n        if (auxiliaryArray[i] < auxiliaryArray[endIdx]) {\r\n            animations.push([\"compare1\", i, leftPointer]);\r\n            animations.push([\"compare2\", i, leftPointer]);\r\n            animations.push([\"swap\", i, auxiliaryArray[leftPointer]]);\r\n            animations.push([\"swap\", leftPointer, auxiliaryArray[i]]);\r\n            swap(auxiliaryArray, i, leftPointer);\r\n            leftPointer++;\r\n        }\r\n    }\r\n    animations.push([\"compare1\", leftPointer, endIdx]);\r\n    animations.push([\"compare2\", leftPointer, endIdx]);\r\n    animations.push([\"swap\", endIdx, auxiliaryArray[leftPointer]]);\r\n    animations.push([\"swap\", leftPointer, auxiliaryArray[endIdx]]);\r\n    swap(auxiliaryArray, leftPointer, endIdx);\r\n    return leftPointer;\r\n}\r\nfunction swap(auxiliaryArray, firstIdx, secondIdx) {\r\n    let temp = auxiliaryArray[firstIdx];\r\n    auxiliaryArray[firstIdx] = auxiliaryArray[secondIdx];\r\n    auxiliaryArray[secondIdx] = temp;\r\n}","export function getHeapSortAnimations(array){\r\n    const animations = [];\r\n    heapSort(array,animations);\r\n    return [animations];\r\n}\r\n\r\nfunction swap(array,firstIdx,secondIdx){\r\n    const temp = array[firstIdx];\r\n    array[firstIdx] = array[secondIdx];\r\n    array[secondIdx] = temp;\r\n}\r\n\r\nfunction heapSort(array,animations){\r\n    var last = array.length;\r\n    \r\n    for(let i = Math.floor(array.length/2) - 1; i >= 0; i--){\r\n        heapDown(array,array.length,i,animations);\r\n    }\r\n\r\n    for(let k = array.length -1; k > 0; k--){\r\n        animations.push(['swap',0,array[k]]);\r\n        animations.push(['swap',k,array[0]]);\r\n        swap(array,0,k);\r\n        heapDown(array,k,0,animations);\r\n    }\r\n}\r\nfunction heapDown(arr, length, index,animations){\r\n    var largest = index;\r\n    var left = 2 * index + 1;\r\n    var right = 2 * index + 2;\r\n\r\n    if(left < length && arr[left] > arr[largest]){\r\n        largest = left;\r\n    }\r\n\r\n    if(right < length && arr[right] > arr[largest]){\r\n        largest = right;\r\n    }\r\n\r\n    if(largest != index){\r\n        animations.push(['compare1',index,largest]);\r\n        animations.push(['compare2',index,largest]);\r\n        animations.push(['swap',index,arr[largest]]);\r\n        animations.push(['swap',largest,arr[index]]);\r\n        swap(arr,largest,index);\r\n        heapDown(arr,length,largest,animations);\r\n    }\r\n}","export function getCombSortAnimations(array) {\r\n    let animations = [];\r\n    let auxiliaryArray = array.slice();\r\n    combSort(auxiliaryArray, animations);\r\n\r\n    array = auxiliaryArray;\r\n    console.log([animations]);\r\n    return [animations];\r\n}\r\n\r\nfunction combSort(auxiliaryArray, animations) {\r\n  let gap = auxiliaryArray.length;\r\n  let swap = true;\r\n  while (gap > 1 || swap === true) {\r\n    gap = combSortHelper(gap);\r\n    swap = false;\r\n    for (let i = 0; i < auxiliaryArray.length - gap; i++) {\r\n        animations.push([\"compare1\", i, i + gap]);\r\n        animations.push([\"compare2\", i, i + gap]);\r\n      if (auxiliaryArray[i] > auxiliaryArray[i + gap]) {\r\n        animations.push([\"swap\", i, auxiliaryArray[i + gap]]);\r\n        animations.push([\"swap\", i + gap, auxiliaryArray[i]]);\r\n        let temp = auxiliaryArray[i];\r\n        auxiliaryArray[i] = auxiliaryArray[i + gap];\r\n        auxiliaryArray[i + gap] = temp;\r\n        swap = true;\r\n      }\r\n    }\r\n    gap = Math.floor(gap / 1.3);\r\n  }\r\n  return auxiliaryArray;\r\n}\r\n\r\nfunction combSortHelper(gap) {\r\n    gap = Math.floor(gap / 1.3);\r\n    return (gap <=1? 1 : gap);\r\n}","import React from 'react';\r\nimport {getMergeSortAnimations} from '../SortingAlgorithms/mergeSort.js';\r\nimport {getSelectionSortAnimations} from '../SortingAlgorithms/selectionSort.js';\r\nimport {getBubbleSortAnimations} from '../SortingAlgorithms/bubbleSort.js';\r\nimport {getInsertionSortAnimations} from '../SortingAlgorithms/insertionSort.js';\r\nimport {getQuickSortAnimations} from '../SortingAlgorithms/quickSort.js';\r\nimport {getHeapSortAnimations} from '../SortingAlgorithms/heapSort.js';\r\nimport {getCocktailSortAnimations} from '../SortingAlgorithms/cocktailSort.js';\r\nimport {getCombSortAnimations} from '../SortingAlgorithms/combSort.js';\r\nimport {getShellSortAnimations} from '../SortingAlgorithms/shellSort.js';\r\nimport './SortingVisualizer.css';\r\nconst ANIMATION_SPEED_MS_SBC = 0.5;\r\nconst ANIMATION_SPEED_MS_ISC = 1.5;\r\nconst ANIMATION_SPEED_MS_MQH = 5;\r\nconst NUMBER_OF_ARRAY_BARS = 101;\r\nconst PRIMARY_COLOR = '#015c5c';\r\nconst SECONDARY_COLOR = 'red';\r\nexport default class SortingVisualizer extends React.Component{\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          array : [],\r\n      };\r\n  }\r\n  componentDidMount(){\r\n      this.restArray();\r\n  };\r\n  restArray(){\r\n      const array = [];\r\n      for(let i=0;i<NUMBER_OF_ARRAY_BARS;i++){\r\n          array.push(randomIntFromInterval(5,467));\r\n      }\r\n      this.setState({array});\r\n  }\r\n  toggleButtons(select){\r\n    const newBtn = document.getElementById('buttonc');\r\n    const newBtn1 = document.getElementById('buttonc1');\r\n    const newBtn2 = document.getElementById('buttonc2');\r\n    const newBtn3 = document.getElementById('buttonc3');\r\n    const newBtn4= document.getElementById('buttonc4');\r\n    const newBtn5 = document.getElementById('buttonc5');\r\n    const newBtn6 = document.getElementById('buttonc6');\r\n    const newBtn7 = document.getElementById('buttonc7');\r\n    const newBtn8 = document.getElementById('buttonc8');\r\n    const newBtn9 = document.getElementById('buttonc9');\r\n    newBtn.disabled = select;\r\n    newBtn1.disabled = select;\r\n    newBtn2.disabled = select;\r\n    newBtn3.disabled = select;\r\n    newBtn4.disabled = select;\r\n    newBtn5.disabled = select;\r\n    newBtn6.disabled = select;\r\n    newBtn7.disabled = select;\r\n    newBtn8.disabled = select;\r\n    newBtn9.disabled = select;\r\n}\r\n  mergesort(){\r\n    this.toggleButtons(true);\r\n    const [animations] = getMergeSortAnimations(this.state.array);\r\n    var time = 0;\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const [desc, barOneIdx, barTwoIdx] = animations[i];\r\n      const ColorChange = desc === \"compare1\" || desc === \"compare2\";\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      if (ColorChange) {\r\n          const color = (desc === \"compare1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          time = i * ANIMATION_SPEED_MS_MQH;\r\n          setTimeout(() => {\r\n              barOneStyle.background = color;\r\n              barTwoStyle.background = color;\r\n          }, i * ANIMATION_SPEED_MS_MQH);\r\n      }\r\n      else {\r\n        time = i * ANIMATION_SPEED_MS_MQH;\r\n          const [, barIndex, newHeight] = animations[i];\r\n          const barStyle = arrayBars[barIndex].style;\r\n          setTimeout(() => {\r\n              barStyle.height = `${newHeight}px`;\r\n          }, i * ANIMATION_SPEED_MS_MQH);  \r\n      }\r\n  }\r\n  setTimeout(() => {\r\n    this.toggleButtons(false);\r\n}, time)\r\n}\r\n\r\nbubblesort(){\r\n    this.toggleButtons(true);\r\n  const [animations] = getBubbleSortAnimations(this.state.array);\r\n  var time = 0;\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const [desc, barOneIdx, barTwoIdx] = animations[i];\r\n      const ColorChange = desc === \"compare1\" || desc === \"compare2\";\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      if (ColorChange) {\r\n          const color = (desc === \"compare1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          time = i * ANIMATION_SPEED_MS_SBC;\r\n          setTimeout(() => {\r\n              barOneStyle.background = color;\r\n              barTwoStyle.background = color;\r\n          }, i * ANIMATION_SPEED_MS_SBC);\r\n      }\r\n      else {\r\n        time = i * ANIMATION_SPEED_MS_SBC;\r\n          const [, barIndex, newHeight] = animations[i];\r\n          const barStyle = arrayBars[barIndex].style;\r\n          setTimeout(() => {\r\n              barStyle.height = `${newHeight}px`;\r\n          }, i * ANIMATION_SPEED_MS_SBC);  \r\n      }\r\n  }\r\n  setTimeout(() => {\r\n    this.toggleButtons(false);\r\n}, time)\r\n }\r\n  selectionSort(){\r\n    this.toggleButtons(true);\r\n    const [animations] = getSelectionSortAnimations(this.state.array);\r\n    var time = 0;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const [desc, barOneIdx, barTwoIdx] = animations[i];\r\n        const ColorChange = desc === \"compare1\" || desc === \"compare2\";\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        if (ColorChange) {\r\n            const color = (desc === \"compare1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            time = i * ANIMATION_SPEED_MS_SBC;\r\n            setTimeout(() => {\r\n                barOneStyle.background = color;\r\n                barTwoStyle.background = color;\r\n            }, i * ANIMATION_SPEED_MS_SBC);\r\n        }\r\n        else {\r\n            time = i * ANIMATION_SPEED_MS_SBC;\r\n            const [, barIndex, newHeight] = animations[i];\r\n            const barStyle = arrayBars[barIndex].style;\r\n            setTimeout(() => {\r\n                barStyle.height = `${newHeight}px`;\r\n            }, i * ANIMATION_SPEED_MS_SBC);  \r\n        }\r\n    }\r\n    setTimeout(() => {\r\n        this.toggleButtons(false);\r\n    }, time)\r\n   }\r\n   insertionsort(){\r\n    this.toggleButtons(true);\r\n    const [animations] = getInsertionSortAnimations(this.state.array);\r\n    var time = 0;\r\n    for (let i = 0; i < animations.length; i++) {\r\n        const [desc, barOneIdx, barTwoIdx] = animations[i];\r\n        const ColorChange = desc === \"compare1\" || desc === \"compare2\";\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        if (ColorChange) {\r\n            const color = (desc === \"compare1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            time = i * ANIMATION_SPEED_MS_ISC;\r\n            setTimeout(() => {\r\n                barOneStyle.background = color;\r\n                barTwoStyle.background = color;\r\n            }, i * ANIMATION_SPEED_MS_ISC);\r\n        }\r\n        else {\r\n            time = i * ANIMATION_SPEED_MS_ISC;\r\n            const [, barIndex, newHeight] = animations[i];\r\n            const barStyle = arrayBars[barIndex].style;\r\n            setTimeout(() => {\r\n                barStyle.height = `${newHeight}px`;\r\n            }, i * ANIMATION_SPEED_MS_ISC);  \r\n        }\r\n    }\r\n    setTimeout(() => {\r\n        this.toggleButtons(false);\r\n    }, time)\r\n}\r\ncocktailsort(){\r\n    this.toggleButtons(true);\r\nconst [animations] = getCocktailSortAnimations(this.state.array);\r\nvar time = 0;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const [desc, barOneIdx, barTwoIdx] = animations[i];\r\n        const ColorChange = desc === \"compare1\" || desc === \"compare2\";\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        if (ColorChange) {\r\n            const color = (desc === \"compare1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            time = i * ANIMATION_SPEED_MS_SBC;\r\n            setTimeout(() => {\r\n                barOneStyle.background = color;\r\n                barTwoStyle.background = color;\r\n            }, i * ANIMATION_SPEED_MS_SBC);\r\n        }\r\n        else {\r\n            time = i * ANIMATION_SPEED_MS_SBC;\r\n            const [, barIndex, newHeight] = animations[i];\r\n            const barStyle = arrayBars[barIndex].style;\r\n            setTimeout(() => {\r\n                barStyle.height = `${newHeight}px`;\r\n            }, i * ANIMATION_SPEED_MS_SBC);  \r\n        }\r\n    }\r\n    setTimeout(() => {\r\n        this.toggleButtons(false);\r\n    }, time)\r\n   }\r\n   quicksort(){\r\n    this.toggleButtons(true);\r\n    const [animations] = getQuickSortAnimations(this.state.array);\r\n    var time = 0;\r\n        for (let i = 0; i < animations.length; i++) {\r\n          const [desc, barOneIdx, barTwoIdx] = animations[i];\r\n            const ColorChange = desc === \"compare1\" || desc === \"compare2\" || desc === \"pivot1\";\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            if (ColorChange) {\r\n                const color = (desc === \"compare1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                const color1 = (desc === \"pivot1\") ? 'yellow' : PRIMARY_COLOR;\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const barpivot = arrayBars[barOneIdx].style;\r\n                time = i * ANIMATION_SPEED_MS_MHQ;\r\n                setTimeout(() => {\r\n                    barOneStyle.background = color;\r\n                    barTwoStyle.background = color;\r\n                    barpivot.background = color1;\r\n                }, i * ANIMATION_SPEED_MS_MQH);\r\n            }\r\n            else {\r\n                time = i * ANIMATION_SPEED_MS_MHQ;\r\n                const [, barIndex, newHeight] = animations[i];\r\n                const barStyle = arrayBars[barIndex].style;\r\n                setTimeout(() => {\r\n                    barStyle.height = `${newHeight}px`;\r\n                }, i * ANIMATION_SPEED_MS_MQH);  \r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.toggleButtons(false);\r\n        }, time)\r\n  }\r\n  heapSort() {\r\n    this.toggleButtons(true);\r\n    const [animations] = getHeapSortAnimations(this.state.array);\r\n    var time = 0;\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [desc, barOneIdx, barTwoIdx] = animations[i];\r\n            const ColorChange = desc === \"compare1\" || desc === \"compare2\";\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            if (ColorChange) {\r\n                const color = (desc === \"compare1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                time = i * ANIMATION_SPEED_MS_MHQ;\r\n                setTimeout(() => {\r\n                    barOneStyle.background = color;\r\n                    barTwoStyle.background = color;\r\n                }, i * ANIMATION_SPEED_MS_MQH);\r\n            }\r\n            else {\r\n                time = i * ANIMATION_SPEED_MS_MHQ;\r\n                const [, barIndex, newHeight] = animations[i];\r\n                const barStyle = arrayBars[barIndex].style;\r\n                setTimeout(() => {\r\n                    barStyle.height = `${newHeight}px`;\r\n                    barStyle.backgroundColor= '#015c5c';\r\n                }, i * ANIMATION_SPEED_MS_MQH);  \r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.toggleButtons(false);\r\n        }, time)\r\n  }\r\n  combSort(){\r\n    this.toggleButtons(true);\r\n    const [animations] = getCombSortAnimations(this.state.array);\r\n    var time = 0;\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [desc, barOneIdx, barTwoIdx] = animations[i];\r\n            const ColorChange = desc === \"compare1\" || desc === \"compare2\";\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            if (ColorChange) {\r\n                const color = (desc === \"compare1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                time = i * ANIMATION_SPEED_MS_ISC;\r\n                setTimeout(() => {\r\n                    barOneStyle.background = color;\r\n                    barTwoStyle.background = color;\r\n                }, i * ANIMATION_SPEED_MS_ISC);\r\n            }\r\n            else {\r\n                time = i * ANIMATION_SPEED_MS_ISC;\r\n                const [, barIndex, newHeight] = animations[i];\r\n                const barStyle = arrayBars[barIndex].style;\r\n                setTimeout(() => {\r\n                    barStyle.height = `${newHeight}px`;\r\n                }, i * ANIMATION_SPEED_MS_ISC);  \r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.toggleButtons(false);\r\n        }, time)\r\n  }\r\n  cocktailsort(){\r\n    this.toggleButtons(true);\r\n    const [animations] = getCocktailSortAnimations(this.state.array);\r\n    var time = 0;\r\n        for (let i = 0; i < animations.length; i++) {\r\n          const [desc, barOneIdx, barTwoIdx] = animations[i];\r\n            const ColorChange = desc === \"compare1\" || desc === \"compare2\";\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            if (ColorChange) {\r\n                const color = (desc === \"compare1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                time = i * ANIMATION_SPEED_MS_SBC;\r\n                setTimeout(() => {\r\n                    barOneStyle.background = color;\r\n                    barTwoStyle.background = color;\r\n                }, i * ANIMATION_SPEED_MS_SBC);\r\n            }\r\n            else {\r\n                const [, barIndex, newHeight] = animations[i];\r\n                const barStyle = arrayBars[barIndex].style;\r\n                time = i * ANIMATION_SPEED_MS_SBC;\r\n                setTimeout(() => {\r\n                    barStyle.height = `${newHeight}px`;\r\n                }, i * ANIMATION_SPEED_MS_SBC);  \r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.toggleButtons(false);\r\n        }, time)\r\n  }\r\n  shellsort(){\r\n    this.toggleButtons(true);\r\n    const [animations] = getShellSortAnimations(this.state.array);\r\n    var time = 0;\r\n        for (let i = 0; i < animations.length; i++) {\r\n          const [desc, barOneIdx, barTwoIdx,barThreeIdx] = animations[i];\r\n            const ColorChange = desc === \"compare1\" || desc === \"compare2\";\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            if (ColorChange) {\r\n                const color = (desc === \"compare1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const barThreeStyle = arrayBars[barThreeIdx].style;\r\n                time = i * ANIMATION_SPEED_MS_ISC;\r\n                setTimeout(() => {\r\n                    barOneStyle.background = color;\r\n                    barTwoStyle.background = color;\r\n                    barThreeStyle.background = color;\r\n                }, i * ANIMATION_SPEED_MS_ISC);\r\n            }\r\n            else {\r\n                time = i * ANIMATION_SPEED_MS_ISC;\r\n                const [, barIndex, newHeight,] = animations[i];\r\n                const barStyle = arrayBars[barIndex].style;\r\n                setTimeout(() => {\r\n                    barStyle.height = `${newHeight}px`;\r\n                    barStyle.backgroundColor= '#015c5c';\r\n                }, i * ANIMATION_SPEED_MS_ISC);  \r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.toggleButtons(false);\r\n        }, time)\r\n  }\r\n   showcatweb() {\r\n    this.restArray();\r\n    var webs = document.getElementsByClassName('array-bar');\r\n    for (var i = 0; i < webs.length; i++) {\r\n      var imgCnr = webs[i];\r\n      imgCnr.style.backgroundColor ='black'; \r\n    }\r\n  }\r\n  render(){\r\n      const{array} = this.state;\r\n      return(\r\n        <div >\r\n           <div className=\"intro-container title\">\r\n                <p>SORTING VISUALIZER</p>\r\n            </div>\r\n          <div className=\"array-container\">\r\n          <div className=\"button-area\">\r\n       <button id=\"buttonc\" className=\"primary-btn\" onClick={()=>this.showcatweb()}>Reset Array</button>\r\n       <button id=\"buttonc1\" onClick={() => this.mergesort()}>Merge Sort</button>\r\n       <button id=\"buttonc2\" onClick={() => this.selectionSort()}>Selection Sort</button>\r\n       <button id=\"buttonc3\" onClick={() => this.bubblesort()}>Bubble Sort</button>\r\n       <button id=\"buttonc4\" onClick={() => this.insertionsort()}>Insertion Sort</button>\r\n       <button id=\"buttonc5\" onClick={() => this.shellsort()}>Shell Sort</button>\r\n       <button id=\"buttonc6\" onClick={() => this.combSort()}>Comb Sort</button>\r\n       <button id=\"buttonc7\" onClick={() => this.cocktailsort()}>Cocktail Sort</button>\r\n       <button id=\"buttonc8\" onClick={() => this.quicksort()}>Quick Sort</button>\r\n       <button id=\"buttonc9\" onClick={() => this.heapSort()}>Heap Sort</button>\r\n      </div>\r\n          {array.map((value,idx) => (\r\n              <div className=\"array-bar\" \r\n                  key={idx}\r\n                  style={{height:`${value}px`}}>\r\n              </div>\r\n       ))}\r\n       </div>\r\n\r\n       </div>\r\n      );\r\n  }\r\n}\r\nfunction randomIntFromInterval(min,max){\r\n    return Math.floor(Math.random() * (max-min+1)+min);\r\n}","export function getBubbleSortAnimations(array) {\r\n    const animations = [];\r\n    for(let i=0;i<array.length;i++){\r\n        for(let j=0;j<array.length-i-1;j++){\r\n            animations.push([\"compare1\",j,j+1]);\r\n            animations.push([\"compare2\",j,j+1]);\r\n           if(array[j]>array[j+1]){\r\n            animations.push([\"swap\",j, array[j+1]]);\r\n            animations.push([\"swap\",j+1,array[j]]);\r\n            var temp = array[j];\r\n            array[j] = array[j + 1];\r\n            array[j+1] = temp;\r\n           }\r\n           else{\r\n            animations.push([\"swap\",j, array[j]]);\r\n            animations.push([\"swap\",j,array[j]]);\r\n           }\r\n        }\r\n    }\r\n    return [animations];\r\n}\r\n","export function getSelectionSortAnimations(array) {\r\n    const animations = [];\r\n    for (let i = 0; i < array.length - 1; i++){\r\n        for (let j = i + 1; j < array.length; j++){\r\n            animations.push([\"compare1\",i, j]);\r\n            animations.push([\"compare2\",i, j]);\r\n            if (array[i] > array[j]){\r\n                [array[i], array[j]] = [array[j], array[i]];\r\n                animations.push([\"swap\",i, array[i]]);\r\n                animations.push([\"swap\",j, array[j]]);\r\n            } else {\r\n                animations.push([\"swap\",i, array[i]]);\r\n                animations.push([\"swap\",j, array[j]]);\r\n            }\r\n        }\r\n    }\r\n    return [animations];\r\n}","export function getInsertionSortAnimations(array) {\r\n    const animations = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n        let keyIndex = i;\r\n        for (var j = i - 1; j >= 0; j--) {\r\n          animations.push([\"compare1\",keyIndex, j]);\r\n          animations.push([\"compare2\",keyIndex, j]);\r\n          if (array[j] > array[keyIndex]) {\r\n            animations.push([\"swap\",j, array[keyIndex]]);\r\n            animations.push([\"swap\",keyIndex,array[j]]);\r\n            var temp = array[j];\r\n            array[j] = array[keyIndex];\r\n            array[keyIndex] = temp;\r\n            keyIndex = j;\r\n          } \r\n          else {\r\n            animations.push([\"swap\",j, array[j]]);\r\n            animations.push([\"swap\",j, array[j]]);\r\n            break;\r\n          }\r\n        }\r\n    }\r\n    return [animations];\r\n}\r\n","export function getCocktailSortAnimations(a)\r\n\t{\r\n\t\tconst animations = [];\r\n\t\tlet swapped = true;\r\n\t\tlet start = 0;\r\n\t\tlet end = a.length;\r\n\t\twhile (swapped == true) {\r\n\t\t\tswapped = false;\r\n\t\t\tfor (let i = start; i < end - 1; ++i) {\r\n\t\t\t\tanimations.push([\"compare1\",i,i+1]);\r\n\t\t\t\tanimations.push([\"compare2\",i,i+1]);\r\n\t\t\t\tif (a[i] > a[i + 1]) {\r\n\t\t\t\t\tanimations.push([\"swap\",i,a[i+1]]);\r\n\t\t\t\t\tanimations.push([\"swap\",i+1,a[i]]);\r\n\t\t\t\t\tlet temp = a[i];\r\n\t\t\t\t\ta[i] = a[i + 1];\r\n\t\t\t\t\ta[i + 1] = temp;\r\n\t\t\t\t\tswapped = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (swapped == false)break;\r\n\t\t\tswapped = false;\r\n\t\t\tend = end - 1;\r\n\t\t\tfor (let i = end - 1; i >= start; i--) {\r\n\t\t\t\tanimations.push([\"compare1\",i,i+1]);\r\n\t\t\t\tanimations.push([\"compare2\",i,i+1]);\r\n\t\t\t\tif (a[i] > a[i + 1]) {\r\n\t\t\t\t\tanimations.push([\"swap\",i,a[i+1]]);\r\n\t\t\t\t\tanimations.push([\"swap\",i+1,a[i]]);\r\n\t\t\t\t\tlet temp = a[i];\r\n\t\t\t\t\ta[i] = a[i + 1];\r\n\t\t\t\t\ta[i + 1] = temp;\r\n\t\t\t\t\tswapped = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tstart = start + 1;\r\n\t\t}\r\n\t\treturn [animations];\r\n\t}\r\n\t\r\n\t\r\n","\r\nexport function getShellSortAnimations(arr)\r\n{\r\n    const animations = [];\r\n\tlet n = arr.length;\r\n\t\tfor (let gap = Math.floor(n/2); gap > 0; gap = Math.floor(gap/2))\r\n\t\t{\r\n\t\t\tfor (let i = gap; i < n; i += 1)\r\n\t\t\t{\r\n\t\t\t\tlet temp = arr[i];\r\n\t\t\t\tlet j;\r\n\t\t\t\tfor (j = i; j >= gap && arr[j - gap] > temp; j -= gap){\r\n                    animations.push([\"compare1\",gap,i,j]);\r\n                    animations.push([\"compare2\",gap,i,j]);\r\n                    arr[j] = arr[j - gap];\r\n                    animations.push([\"swap\",j,arr[j - gap]]);\r\n                }\r\n\t\t\t\tarr[j] = temp;\r\n                animations.push([\"swap\",j,temp]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [animations];\r\n}\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport Header from './Header.js';\r\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer>      \r\n      </SortingVisualizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}